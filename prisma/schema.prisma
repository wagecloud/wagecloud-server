generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

generator dbml {
  provider              = "prisma-dbml-generator"
  mapToDbSchema         = false
  includeRelationFields = false
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // schemas  = ["account", "vm"]
}

model Account {
  id         BigInt   @id
  email      String   @unique
  name       String?
  password   String
  created_at DateTime @default(now())
  VM         VM[]

  @@map("account")
}

model VM {
  id         BigInt @id @default(autoincrement())
  account_id BigInt
  network_id String @unique
  os_id      String
  arch_id    String

  name       String
  cpu        Int
  ram        Int // In MB
  storage    Int // In GB
  created_at DateTime @default(now()) 
  updated_at DateTime @updatedAt @default(now())

  Account Account @relation(fields: [account_id], references: [id])
  Network Network @relation(fields: [network_id], references: [id])
  OS      OS      @relation(fields: [os_id], references: [id])
  Arch    Arch    @relation(fields: [arch_id], references: [id])

  @@map("vm")
}

model Network {
  id String @id
  private_ip String   @unique
  created_at DateTime @default(now())

  VMs VM[]

  @@map("network")
}

// Only os name: ubuntu, centos, debian, ...
model OS {
  id         String  @id
  name       String  
  created_at DateTime @default(now())

  VMs VM[]

  @@map("os")
}

model Arch {
  id String @id
  name String
  created_at DateTime @default(now())
  VMs VM[]
  @@map("arch")
}

enum PaymentType {
  VNPay
}

